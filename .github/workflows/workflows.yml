name: Build and Deploy

on:
  push:
    branches: [ main, cicd ]

  pull_request:
    branches: [ main, cicd ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      #application파일 생성
      - name: 🔧 Generate application.properties for Config Server
        run: |
          echo -e "${{ secrets.CONFIGSERVER_APP_PROD }}" | sed 's/\\n/\\\\n/g' > apps/configServer/src/main/resources/application.properties

      # env파일 생성
      - name: Create .env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MY_DOCKER_ID=${{ secrets.MY_DOCKER_ID }}" >> .env

      # Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 빌드
      - name: Build All JARs
        run: ./gradlew :apps:eurekaServer:build :apps:configServer:build :apps:apiGateWay:build :apps:authService:build :apps:jobService:build :apps:coverLetterService:build

      # 도커 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 도커 빌드, 푸쉬
      - name: Build & Push Docker Images
        run: |
          services=("configServer" "eurekaServer" "apiGateWay" "authService" "jobService" "coverLetterService")
          for service in "${services[@]}"; do
            lowercase_service=$(echo "$service" | tr '[:upper:]' '[:lower:]')
          
            echo "🐳 Building Docker image for $service"
            docker build -t ${{ secrets.MY_DOCKER_ID }}/$lowercase_service:latest ./apps/$service
  
            echo "🚀 Pushing Docker image for $service"
            docker push ${{ secrets.MY_DOCKER_ID }}/$lowercase_service:latest
          done

      - name: 📦 Upload docker-compose.yml and .env to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          #key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml,.env"
          target: "/home/ubuntu/myproject"

      # 배포
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          #key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/myproject
            docker-compose pull
            docker-compose up -d