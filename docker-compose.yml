services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ] # MySQL이 healthy 한 지 판단할 수 있는 명령어
      interval: 5s # 5초 간격으로 체크
      retries: 10 # 10번까지 재시도
    networks:
      - msanet

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 10
    networks:
      - msanet

  eureka:
    image: ${MY_DOCKER_ID}/eurekaserver:latest
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - msanet

  config:
    image: ${MY_DOCKER_ID}/configserver:latest
    container_name: config
    ports:
      - "8888:8888"
    networks:
      - msanet
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10

  gateway:
    image: ${MY_DOCKER_ID}/apigateway:latest
    container_name: apigateway
    depends_on:
      eureka:
        condition: service_started
      config:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - msanet

  auth:
    image: ${MY_DOCKER_ID}/authservice:latest
    container_name: auth
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      eureka:
        condition: service_started
      config:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - msanet

  job:
    image: ${MY_DOCKER_ID}/jobservice:latest
    container_name: job
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      eureka:
        condition: service_started
      config:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - msanet

  cover-letter:
    image: ${MY_DOCKER_ID}/coverletterservice:latest
    container_name: coverletter
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      eureka:
        condition: service_started
      config:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - msanet

volumes:
  mysql-data:

networks:
  msanet:
    driver: bridge